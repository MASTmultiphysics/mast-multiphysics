/* Generated by Cython 0.29.13 */

#ifndef __PYX_HAVE__pynastran_io
#define __PYX_HAVE__pynastran_io

struct BDFModel;

/* "pynastran_io.pyx":33
 * 
 * 
 * cdef public class BDFModel[object BDFModel, type BDFModelType]:             # <<<<<<<<<<<<<<
 *     cdef:
 *         string bdfPath
 */
struct BDFModel {
  PyObject_HEAD
  std::string bdfPath;
  int nDims;
  int nNodes;
  int nElems;
  int nMaterials;
  int nProperties;
  std::map<std::string,int>  nElemTypes;
  PyObject *myBDF;
};

#ifndef __PYX_HAVE_API__pynastran_io

#ifndef __PYX_EXTERN_C
  #ifdef __cplusplus
    #define __PYX_EXTERN_C extern "C"
  #else
    #define __PYX_EXTERN_C extern
  #endif
#endif

#ifndef DL_IMPORT
  #define DL_IMPORT(_T) _T
#endif

__PYX_EXTERN_C DL_IMPORT(PyTypeObject) BDFModelType;

__PYX_EXTERN_C struct BDFModel *buildBDFModel(std::string);
__PYX_EXTERN_C void printBDFStats(struct BDFModel *);
__PYX_EXTERN_C std::vector<std::vector<double> >  getNodes(struct BDFModel *);
__PYX_EXTERN_C std::map<std::string,std::vector<std::vector<int> > >  getElements(struct BDFModel *);
__PYX_EXTERN_C std::map<std::string,int>  getNumberOfElementTypes(struct BDFModel *);
__PYX_EXTERN_C std::map<std::string,std::vector<int> >  getSPCs(struct BDFModel *);

#endif /* !__PYX_HAVE_API__pynastran_io */

/* WARNING: the interface of the module init function changed in CPython 3.5. */
/* It now returns a PyModuleDef instance instead of a PyModule instance. */

#if PY_MAJOR_VERSION < 3
PyMODINIT_FUNC initpynastran_io(void);
#else
PyMODINIT_FUNC PyInit_pynastran_io(void);
#endif

#endif /* !__PYX_HAVE__pynastran_io */
